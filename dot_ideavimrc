let mapleader=" "
let g:mapleader=" "

" UI/UX
set scrolloff=5
set autoindent
set number
set showcmd
set showmode
set clipboard=ideaput
set clipboard+=unnamed
set hlsearch
set incsearch
set ignorecase
set smartcase
set ideamarks
set ideajoin
nmap <ESC> :nohlsearch<CR>

""" Plugins
set vim-highlightedyank
set matchit
set surround
set commentary
set argtextobj

nmap <Leader>w\ <Action>(SplitVertically)
nmap <Leader>w- <Action>(SplitHorizontally)

" Don't use Ex mode, use Q for formatting.
map Q gq

nmap gq <Action>(com.andrewbrookins.idea.wrap.WrapAction)
vmap gq <Action>(com.andrewbrookins.idea.wrap.WrapAction)
imap jk <Esc>

"" find
nmap <leader>fa <Action>(SearchEverywhere)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fr <Action>(RecentFiles)
nmap <leader>fw <Action>(FindInPath)
nmap <leader>fb <Action>(Switcher)

"" editing
nmap K <Action>(ShowHoverInfo)
nmap ga <Action>(ShowIntentionActions)

"" git operation
nmap <leader>gt <Action>(ActivateCommitToolWindow)
nmap <leader>gC <Action>(Vcs.ShowTabbedFileHistory)
nmap <leader>gr <Action>(Vcs.RollbackChangedLines)
nmap <leader>gR <Action>(ChangesView.Revert)
nmap <leader>gl <Action>(Annotate)

"" tabs
nmap <leader>bc <Action>(CloseContent)
nmap <leader>bC <Action>(CloseAllEditors)
nmap <leader>wc <Action>(CloseContent)
nmap <leader>wC <Action>(CloseAllEditors)
"" panels
nmap <leader>wh <C-w>h
nmap <leader>wl <C-w>l
nmap <leader>wk <C-w>k
nmap <leader>wj <C-w>j

" jump to beginning or end using H and L
noremap H ^
noremap L $
noremap Y y$

nmap <leader>ss <Action>(GotoSymbol)
nmap <leader>fs <Action>(SaveAll)

nmap gR <Action>(RenameElement)
nmap gF <Action>(RenameFile)

" Go to
nmap gru <Action>(ShowUsages)
nmap grt <Action>(GotoTypeDeclaration)
nmap grd <Action>(GotoDeclaration)
nmap gri <Action>(GotoImplementation)
nmap grs <Action>(GotoSuperMethod)
nmap grT <Action>(GotoTest)

nmap [c <Action>(VcsShowNextChangeMarker)
nmap ]c <Action>(VcsShowPrevChangeMarker)
nmap [b <Action>(PreviousTab)
nmap ]b <Action>(NextTab)
nmap [d <Action>(GotoPreviousError)
nmap ]d <Action>(GotoNextError)
