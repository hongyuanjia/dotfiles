# Enable autocompletion provided by Homebrew
if type brew &>/dev/null; then
    source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

    autoload -Uz compinit
    compinit
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
    export hostip=$(cat /etc/resolv.conf | grep -oP '(?<=nameserver\ ).*')

    export DISPLAY="$hostip:0.0"
    export LIBGL_ALWAYS_INDIRECT=1

    # to explore web pages in HOST browser using 'wslview' from
    # 'wslu' (https://github.com/wslutilities/wslu)
    if command -v wslview &> /dev/null && [[ $BROWSER != "wslview" ]]; then
        export WSLVIEW_DEFAULT_ENGINE="cmd_explorer"
        export BROWSER="wslview"
    fi

    # needed for GUI with dbus-x11 installed
    if grep -qEi "FedoraRemix" /etc/os-release &> /dev/null && command -v dbus-launch &> /dev/null ; then
        eval "$(timeout 2s dbus-launch --auto-syntax)"
    fi
fi

proxy_enable ()
{
    if [[ $(uname) == "Darwin" ]] ; then
        PROC=$(ps aux)
    else
        PROC=$(ps -aux)
    fi
    CLASH_RUN= $(echo "$PROC" | grep clash &> /dev/null)
    if $CLASH_RUN  ; then
        export HTTP_PROXY=127.0.0.1:7890
        export HTTPS_PROXY=127.0.0.1:7890
        export SOCKS_PROXY=127.0.0.1:7890
        export ALL_PROXY=127.0.0.1:7890
    fi
}

proxy_disable ()
{
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset SOCKS_PROXY
    unset ALL_PROXY
}

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

HIST_STAMPS="yyyy-mm-dd"

bindkey '^l' autosuggest-accept

# Manually set the language to English
export LANG=en_US.UTF-8

# Rustup mirror
export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
export RUSTUP_DIST_SERVER="https://rsproxy.cn"
if [ -f $HOME/.cargo/env ]; then
    . $HOME/.cargo/env
fi

# starship
if command -v starship &> /dev/null ; then
    eval "$(starship init zsh)"
fi

# fzf and fd integration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
if [ -f /usr/share/fzf/shell/key-bindings.zsh ]; then
    . /usr/share/fzf/shell/key-bindings.zsh
fi
if command -v fd &> /dev/null && command -v fzf &> /dev/null ; then
    export FZF_DEFAULT_COMMAND='fd --type file --hidden --exclude .git --color=always'
    export FZF_DEFAULT_OPTS='--ansi'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# enable zoxide
eval "$(zoxide init zsh)"

# shell wrapper for yazi
function ya() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# alias
alias la="ls -la"
alias cm=chezmoi
alias lg=lazygit
